# !/usr/bin/env python
# -*- coding: utf-8 -*-
# date: 2020/06/06
# author: Suqier
# email: suqier5637@foxmail.com
# 在这里尝试着翻译并自己练习黄海广博士的numpy-100项目
# 项目原地址：https://github.com/rougier/numpy-100

# 第六十八题：对于一维向量 D，如何使用描述子集索引的相同大小的向量 S 计算 D 子集的均值
# Author: Jaime Fernández del Río

import numpy as np

D = np.random.uniform(0, 1, 100)
print(D)

print("---------")
S = np.random.randint(0, 10, 100)
print(S)

D_sums = np.bincount(S, weights=D)
D_counts = np.bincount(S)

print("---------")
D_means = D_sums / D_counts
print(D_means)

# 输出内容：
# [0.20150358 0.23745419 0.40571724 0.22996144 0.9603548  0.45381689
#  0.32716299 0.04992675 0.41257769 0.35745169 0.5855567  0.06294825
#  0.91853743 0.91576387 0.42793694 0.34441403 0.46708121 0.02446142
#  0.31769957 0.88851917 0.56045045 0.8809763  0.08081011 0.26787785
#  0.5878818  0.33397432 0.05306714 0.75907374 0.68548948 0.50256299
#  0.24951464 0.4339964  0.38084956 0.43915809 0.98641939 0.09410062
#  0.06205317 0.84729668 0.3420138  0.23485676 0.78727509 0.54784013
#  0.40252422 0.21958288 0.9281174  0.23872111 0.68281164 0.24846372
#  0.92314793 0.7962662  0.23965685 0.01922803 0.28612621 0.50562468
#  0.33041544 0.04527901 0.87614326 0.51988405 0.32420798 0.9095814
#  0.50933394 0.86154214 0.48358374 0.31277765 0.09950212 0.58035758
#  0.97106824 0.32301521 0.6451289  0.40447905 0.90258107 0.25837495
#  0.38732917 0.46877962 0.81072774 0.12359945 0.04785116 0.59660187
#  0.02179903 0.62440359 0.16333952 0.06028689 0.59093396 0.88951523
#  0.21889523 0.70142719 0.57823634 0.38595624 0.08840858 0.0535244
#  0.02449346 0.31524174 0.18286517 0.78962465 0.62639867 0.67769563
#  0.74435189 0.48918866 0.6661321  0.39523945]
# ---------
# [7 4 5 7 1 7 6 6 4 4 7 1 5 2 8 0 4 3 8 8 0 1 5 7 3 3 8 9 9 2 4 5 6 0 0 1 0
#  0 3 6 3 0 1 5 1 1 9 4 3 1 7 4 8 6 5 7 5 6 3 4 4 5 6 7 3 1 7 1 7 9 7 6 0 2
#  1 5 3 9 4 7 6 8 5 2 5 8 1 8 2 1 3 9 1 5 6 1 8 7 3 1]
# ---------
# [0.52187014 0.4978544  0.57300606 0.37826738 0.34324855 0.48748318
#  0.35500017 0.45913849 0.42948569 0.57394959]

# 另外一种写法
import pandas as pd

print(pd.Series(D).groupby(S).mean())
