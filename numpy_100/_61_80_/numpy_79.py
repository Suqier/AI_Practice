# !/usr/bin/env python
# -*- coding: utf-8 -*-
# date: 2020/06/06
# author: Suqier
# email: suqier5637@foxmail.com
# 在这里尝试着翻译并自己练习黄海广博士的numpy-100项目
# 项目原地址：https://github.com/rougier/numpy-100

# 第七十九题：对于由 2 组点集 P0，P1 所描述的线 (2d) 和点集 p ，如何计算点集 p 中的每个点到每条线 i 的距离 (P0[i],P1[i]) ?
# Author: Italmassov Kuanysh

import numpy as np


def distance(P0, P1, p):
    T = P1 - P0
    L = (T**2).sum(axis=1)
    U = -((P0[:, 0] - p[..., 0]) * T[:, 0] + (P0[:, 1] - p[..., 1]) * T[:, 1]) / L
    U = U.reshape(len(U), 1)
    D = P0 + U * T - p
    return np.sqrt((D ** 2).sum(axis=1))


P0 = np.random.uniform(-10, 10, (10,2))
P1 = np.random.uniform(-10,10,(10,2))
p = np.random.uniform(-10, 10, (10,2))
print(np.array([distance(P0,P1,p_i) for p_i in p]))

# 输出内容：
# [[ 4.78461666  1.75288527  5.59906776  2.21254031  6.0780175   3.56249885
#    3.85418403  1.84685281  1.06432032  5.94034017]
#  [ 1.08481673  5.79052791 10.31539449  5.72909408 12.57876311  9.76466104
#    4.53595524  1.98244314  0.39076788  7.1627555 ]
#  [ 2.08711905  2.16900868  8.04643509  4.95272296  8.02655858  5.31814164
#    0.32013825  0.82004657  2.25080786  8.79611012]
#  [ 5.29636599  7.69923199 15.49671908 12.31940629 15.47585942  1.4268477
#    6.29727612  8.21454678  9.1840463   7.20591676]
#  [12.76886339  9.76377856  2.16422015  5.80567922  1.15186301  4.37717623
#   12.20232971  9.80603539  9.39696581  3.98961605]
#  [13.98214498 10.52099242  3.41035673  7.01230903  2.43756211  5.26981461
#   13.20075698 11.02388618 10.47393177  4.52480436]
#  [ 6.77667102  1.48970995  2.90540254  0.34658882  2.14343986 12.5237983
#    2.85966466  3.92808878  0.98741682 14.9268045 ]
#  [ 3.55735499  6.408423    7.64231693  3.29386814  9.58251512  6.39953689
#    6.02740798  0.51625347  2.20493989  4.3998378 ]
#  [ 4.62684082  4.35247065 15.23193988 11.57834719 15.95705627  2.97467813
#    4.02664042  7.59583059  7.38500782  2.20751646]
#  [ 7.75380598  0.85320214  1.90565849  0.62587392  1.11882607 13.19812694
#    3.67942472  4.90841793  1.86573961 15.30961581]]
